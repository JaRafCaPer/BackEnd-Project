<!DOCTYPE html>
<html>

<head>
    <title>Product Management</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        body {
            background-color: #e8eff5; /* Fondo principal */
            color: #495057; /* Texto principal */
        }

        .container {
            margin-top: 5rem;
        }

        h1 {
            color: #4794e6; /* Azul primario */
        }

        .btn-success {
            background-color: #3cb371; /* Verde de éxito */
            color: #fff; /* Texto blanco */
            border-radius: 12px;
        }

        .btn-success:hover {
            background-color: #2e8b57; /* Cambié el color en hover al mismo que el de fondo */
        }

        .pagination {
            max-width: 20%;
            margin: 0 auto;
        }

        .pagination a {
            background-color: #eee0b9; /* Marrón primario */
            color: grey;
            border-radius: 8px;
        }

        .thead-dark {
            background-color: #4794e6; /* Azul primario */
            color: #fff;
        }

        .badge-success {
            background-color: #3cb371; /* Verde de éxito */
            color: #fff;
        }

        .badge-danger {
            background-color: #dc3545; /* Rojo de peligro */
            color: #fff;
        }

        .statusSelect {
            width: 80px;
            border-radius: 5px;
            margin-top: 5px;
        }

        .btn-danger {
            background-color: #dc3545; /* Rojo de peligro */
            color: #fff;
            border-radius: 5px;
        }

        .btn-danger:hover {
            background-color: #bb2d3b; /* Cambié el color en hover al mismo que el de fondo */
        }
    </style>
</head>

<body>
    <div class="container mt-5">
        <h1 class="mb-4">Product Management for Seller: {{user.first_name}}</h1>
        <a class="btn btn-success mb-3" href="/api/products/addProducts">Agregar productos</a>
        <p class="mb-3">Showing {{limitPage}} products on this page</p>
        <nav aria-label="Page navigation" class="pagination">
            <ul class="pagination justify-content-center" style="gap: 5px">
                <p class="justify-content-center">Page {{products.products.page}} of {{products.products.totalPages}}</p>
                <li class="page-item">
                    {{#if productsPrev}}
                    <a class="page-link" href="{{productsPrev}}" aria-label="Anterior">
                        <span aria-hidden="true">&laquo;{{prevPage}}</span>
                    </a>
                    {{/if}}
                </li>
                <li class="page-item">
                    {{#if productsNext}}
                    <a class="page-link" href="{{productsNext}}" aria-label="Siguiente">
                        <span aria-hidden="true">&raquo;{{nextPage}}</span>
                    </a>
                    {{/if}}
                </li>
            </ul>
        </nav>
        <table class="table">
            <thead class="thead-dark">
                <tr>
                    <th>Thumbnail</th>
                    <th>Title</th>
                    <th>Description</th>
                    <th>Price</th>
                    <th>Category</th>
                    <th>Owner</th>
                    <th>Status</th>
                    <th>Stock</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {{#each products.products.docs}}
                <tr>
                    <td><img src="{{thumbnail}}" alt="{{title}} Thumbnail" width="100" height="100"></td>
                    <td>{{title}}</td>
                    <td>{{description}}</td>
                    <td>{{price}}</td>
                    <td>{{category}}</td>
                    <td>{{@root.user.first_name}}</td>
                    <td>
                        {{#if status}}
                        <span class="badge badge-success">Active</span>
                        {{else}}
                        <span class="badge badge-danger">Inactive</span>
                        {{/if}}
                        <select class="statusSelect" data-product-id="{{_id}}">
                            <option value="true" {{#if status}}selected{{/if}}>Active</option>
                            <option value="false" {{#unless status}}selected{{/unless}}>Inactive</option>
                        </select>
                    </td>
                    <td>{{stock}}</td>
                    <td>
                        <button type="submit" class="btn btn-danger deleteProductButton" data-product-id="{{_id}}">Delete</button>
                    </td>
                </tr>
                {{/each}}
            </tbody>
        </table>
    </div>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const deleteButtons = document.querySelectorAll(".deleteProductButton");

  deleteButtons.forEach((button) => {
    button.addEventListener("click", async () => {
      try { 
        const productId = button.getAttribute("data-product-id");

        // Send an AJAX request to delete the product
        const response = await fetch(`/api/products/${productId}`, {
          method: "DELETE",
        });

        if (response.ok) {
          // Product deleted successfully
          alert("Product deleted!");
          redirect("/api/products/listproducts");
          window.location.reload(); // This will refresh the current page
        } else {
          // Handle the error if needed
          alert("Failed to delete the product.");
        }
      } catch (error) {
        console.error("Error:", error);
      }
    });
  });
});
</script>
<script>
document.addEventListener("DOMContentLoaded", () => {
  const statusSelects = document.querySelectorAll(".statusSelect");

  statusSelects.forEach((select) => {
    select.addEventListener("change", async () => {
      const productId = select.getAttribute("data-product-id");
      const newStatus = select.value;

      try {
        const response = await fetch(`/api/products/toggleStatus/${productId}`, {
          method: "PUT",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ status: newStatus }),
        });

        if (response.ok) {
          // Handle the successful status update if needed
          alert("Product status updated successfully!");
          window.location.reload();
        } else {
          // Handle the error if needed
          alert("Failed to update product status.");
        }
      } catch (error) {
        console.error("Error:", error);
      }
    });
  });
});
</script>
    <script>
      document.getElementById("form-category").onsubmit = (e) => {
      e.preventDefault(); const data = new
      FormData(document.getElementById("form-category")); const category =
      data.get("category"); const sort = data.get("sort"); if (category && sort)
      { const url = `?query=category,${category}&sort=${sort}`;
      window.location.href = url; } };
    </script>

  </body>
</html>